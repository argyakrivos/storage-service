swagger: 2
info:
  title: QuarterMaster Storage - Public API
  description: Consumer facing REST API for storage of resources on the cloud.
  version: 1.0.0
# Service configuration\
schemes:
  - http
  - https
basePath: /
produces:
  - application/json
# Service end-points
paths:
  /mappings:
    get:
      summary: Lookup mapping, only available internally
      tags:
        - Mapping
      responses:
        200:
          description: Mapping
          schema:
            $ref: MappingFile

  /resources/{token}:
    get:
      summary: get a resource uri
      description: get the details about the particular resource and its storage
      tags:
        - Mapping
      responses:
        200:
          description: details of this resource, where at least 1 provider has this data
          schema:
            $ref: ProviderStatusResponse
        400:
          description: asset cannot be found on any of the assoicated providers invalid payload

  /resources:
    post:
      summary: add new resource
      description: add a new resource to quartermaster
      consumes: multipart/form-data
      parameters:
        - name: label
          in: formData
          type: string
          description: the grouping the client wishes to post the asset into
          required: true
        - name: data
          in : formData
          type: file
          description: the blob of the asset
          required: true
      tags:
        - Mapping
      responses:
        202:
          description: resource request accepted
          schema:
            $ref: ProviderStatusResponse
# todo: fill out with json error objects
        400:
          description: Bad syntax
        403:
          description: Not authenticated
        503:
          description: provider unavailableexample providerstatus response
{
  "token": "/path/to/file.epub",
  "label": "epub",
  "providers": {
    "local": {
      "available": true
    },
    "azure-a": {
      "available": false
      // No estimate for completeness
    },
    "azure-b": {
      "available": false,
      "percentComplete": 0.44, // Percent complete
      "eta": 61 // seconds until ready
    }
  }
}


example  mapping file
{"extractor":"^.*/(?P<filename>$.*)\\.(?P<extenstion>.{2,3})\\?",
"templates":[{
	"serviceName":"azure-a",
	"template":"http://azureservices.com/blinkbox/\\g<filename>.\\g<extenstion>"}]}
        504:
          description: provider timeout
        502:
          description: one of the upstream providers gave unexpected response
        507:
          description: no space left on provider

definitions:
  ProviderTemplate:
      title: For a named storage:A structure which describes how to apply a set of tokens to its template in order to generate a url for a resource
      properties:
        storage:
          type: string
          title: one the enumerated names available storages
        template:
          type: string
          title: a string containing placeholders where tokens are added to generate a url for a resource
  MappingFile:
    title: List of templates that describe how to create a url from the uri passed back from quarter master
    properties:
      extractorPattern:
        type: string
        title: a regex containing groups that capture tokens to apply to templates to produce urls for each of the enumerated storages
      templates:
        type: object
        title: an Map of Templates that describes how to create a url from the tokens extracted for a given storagename
        additionalProperties: //any number of addtitionalproperties can be objects of said referered type
          $ref: ProviderTemplate
          title: pair of storage name and regex to to apply to the token such that a url can be created for each of the providers requested

  ProviderStatus:
    title: progress status of a resource's storage, an empty finish date suggest incomplete or broken status
    type: object
    properties:
      available:
        type:  boolean
        title: can this file be found at this location
      eta:
        type: number
        title: number of seconds until upload is expected to complete, absent if complete
      percentComplete: 
        type: number
        title: upload complete percentage as fraction of 1, absent if complete
  ProviderStatusResponse:
    title: progress status of a resource's storage
    properties:
      token:
        type: string
        title: a token which represents mapped resources in the cloud
      label:
        type: string
        title: allows you to group assets, define some attributes of how they are stored
      providers:
        type: object
        title: a map on of storage requests ->complete boolean
        additionalProperties: 
          $ref: ProviderStatus
          title: the key is the name of the provider and the value represents the status of the provider

# example providerstatus response
# {
#  "token": "/path/to/file.epub",
#  "label": "epub",
#  "providers": {
#    "local": {
#     "available": true
#    },
#    "azure-a": {
#      "available": false
#      // No estimate for completeness
#    },
#    "azure-b": {
#      "available": false,
#      "percentComplete": 0.44, // Percent complete
#      "eta": 61 // seconds until ready
#    }
#  }
#}


# example  mapping file
# {"extractor":"^.*/(?P<filename>$.*)\\.(?P<extenstion>.{2,3})\\?",
# "templates":[{
#	"serviceName":"azure-a",
#	"template":"http://azureservices.com/blinkbox/\\g<filename>.\\g<extenstion>"}]}